<?php
// задание 1
echo "С помощью цикла while вывести все числа в промежутке от 0 до 100, которые делятся на 3 без остатка.", "<br/>";
$i = 0;
while ($i <= 100) {
    if ($i % 3 == 0) {
        echo $i++, ",";
    } else {
        $i++;
    }
}
echo '<br/><br/><br/>';
// задание 2
echo "С помощью цикла do…while написать функцию для вывода чисел от 0 до 10", "<br/>";
$i = 0;
do {
    if ($i == 0) {
        echo $i . ' - это ноль', "<br/>";
        $i++;
    } elseif ($i % 2 == 0) {
        echo $i . ' - четное число', "<br/>";
        $i++;
    } else {
        echo $i . ' - нечётное число', "<br/>";
        $i++;
    }
} while ($i <= 10);
echo '<br/><br/><br/>';

// задание 3
echo "Объявить массив, в котором в качестве ключей будут использоваться названия областей, а в качестве значений – массивы с названиями городов из соответствующей области.", "<br/><br/>";
$areas = [
    "Московская область" => ["Москва", "Зеленоград", "Клин"],
    "Ленинградская область" => ["Санкт-Петербург", "Всеволожск", "Павловск", "Кронштадт"],
    "Республика Татарстан" => ["Казань", "Набережные Челны", "Альметьевск", "Нижнекамск", "Чистополь"]
];
foreach ($areas as $key => $area) {
    echo $key, ":<br/>";
    foreach ($area as $cite) {
        echo $cite, ", ";
    }
    echo "<br/><br/>";
}

// задание 4, на этом застрял. в виду того что кириллица в utf8 то встроенные функции для строк не работают,
// надо конвертить, нашел потом strcasecmp с ним получилось. Пока не придумал как регистр сохранить
echo "Объявить массив, индексами которого являются буквы русского языка, а значениями – соответствующие латинские буквосочетания (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, …, ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’).
Написать функцию транслитерации строк.";
echo '<br/><br/><br/>';
$string = 'Текст для транслитерации ляля тополя';
$alphabet = [
    'а' => 'a',
    'б' => 'b',
    'в' => 'v',
    'г' => 'g',
    'д' => 'd',
    'е' => 'e',
    'ё' => 'yo',
    'ж' => 'zh',
    'з' => 'z',
    'и' => 'i',
    'й' => 'y',
    'к' => 'k',
    'л' => 'l',
    'м' => 'm',
    'н' => 'n',
    'о' => 'o',
    'п' => 'p',
    'р' => 'r',
    'с' => 's',
    'т' => 't',
    'у' => 'u',
    'ф' => 'f',
    'х' => 'kh',
    'ц' => 'ts',
    'ч' => 'ch',
    'ш' => 'sh',
    'щ' => 'sch',
    'ъ' => '',
    'ы' => 'y',
    'ь' => '',
    'э' => 'e',
    'ю' => 'yu',
    'я' => 'ya',
    ' ' => ' ',
];

function transliteration($str, $arr) {
    // приведем исходную строку к нижнему регистру
    $string = mb_strtolower($str);
    // разобъем строку на массив из символов
    $stringArray = preg_split('//u', $string, -1,PREG_SPLIT_NO_EMPTY);
    //var_dump($stringArray);
    // для каждого символа из строки делаем сравнение, в случае совпадения добавляем символ в новую строку
    foreach ($stringArray as $let) {
        foreach ($arr as $key => $value) {
            if (mb_strCompare($let, $key)) {
                //echo "$key = $let";
                $translit .= $value;
            }
        }
    }
    return $translit;
}
// функция сравнения строк
function mb_strCompare($let1, $let2) {
    if (strcasecmp($let1, $let2) == 0) {
        return true;
    }
    return false;
}

echo transliteration($string, $alphabet);

//echo $str1251, '<br/>';
//foreach (str_split($str1251) as $index => $value) {
//    $targetStr .= iconv('windows-1251', 'utf-8', $value);
//}
//var_dump($targetStr);
//echo transliteration($targetStr);
//$string = mb_strtolower($string);
//$stringArray = preg_split('//u', $string, -1,PREG_SPLIT_NO_EMPTY);
//var_dump($stringArray);

//foreach ($alphabet as $key => $value) {
//    if (strcasecmp($key, $stringArray[0]) == 0) {
//        echo "$key = $stringArray[0]";
//    }
//    $key = iconv('utf-8', 'windows-1251',$key);
//    var_dump($key == $str1251[$i]);
//}

//$str1251 = iconv('utf-8', 'windows-1251',$string);
//for ($i=0; $i <= strlen($str1251); $i++) {
////    $letterIndex = array_search($string[$i],$alphabet);
////    $translit .= $alphabet[$letterIndex];
//    foreach ($alphabet as $key => $value) {
//        $key = iconv('utf-8', 'windows-1251',$key);
//        var_dump($key == $str1251[$i]);
//    }
//}

// задание 5 Написать функцию, которая заменяет в строке пробелы на подчеркивания и возвращает видоизмененную строчку.

// задание 6
// В имеющемся шаблоне сайта заменить статичное меню (ul - li) на генерируемое через PHP.
//Необходимо представить пункты меню как элементы массива и вывести их циклом.
//Подумать, как можно реализовать меню с вложенными подменю? Попробовать его реализовать.
//
// задание 7
// *Вывести с помощью цикла for числа от 0 до 9, НЕ используя тело цикла. Выглядеть это должно так:
// for(…){// здесь пусто}
//
// задание 8
// Повторить третье задание, но вывести на экран только города, начинающиеся с буквы «К».
//
// задание 9
// Объединить две ранее написанные функции в одну, которая получает строку на русском языке,
//производит транслитерацию и замену пробелов на подчеркивания
//(аналогичная задача решается при конструировании url-адресов на основе названия статьи в блогах).